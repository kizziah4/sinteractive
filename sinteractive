#!/bin/bash
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
# Copyright (c) 2007 PÃ¤r Andersson (National Supercomputer Centre, Sweden),
# 2011 Joerg Bornschein <bornschein@fias.uni-frankfurt.de>,
# 2014 Janne Blomqvist  <janne.blomqvist@aalto.fi>
#
# This will submit a batch script that starts screen on a node.
# Then ssh is used to connect to the node and attach the screen.
# The result is very similar to an interactive shell in PBS
# (qsub -I)

MYDIR="$(dirname "$(readlink -f ${BASH_SOURCE[0]})")"

# Batch Script that starts SCREEN
BS=$MYDIR/_interactive
# Interactive screen script
IS=$MYDIR/_interactive_screen

# Default partition (Change this to suit your site!)
# The user can specify another partition explicitly, sbatch will take
# the last one on the command line.
DEFAULTPART=interactive

# Submit the job and get the job id
JOB=`sbatch --output=/dev/null --error=/dev/null -p $DEFAULTPART $@ $BS 2>&1 \
    | egrep -o -e "\b[0-9]+$"`

# Make sure the job is always canceled
trap "{ scancel -q $JOB; exit; }" SIGINT SIGTERM EXIT

echo "Waiting for JOBID $JOB to start"
while true; do
  sleep 2

  # Check job status
  STATUS=`squeue -j $JOB -t PD,R,CF -h -o %t`
  #squeue -j $JOB -h -t PD,R,CF

  if [ "$STATUS" = "R" ]; then
    # Job is running, break the while loop
    break
  elif [ "$STATUS" != "PD" ] && [ "$STATUS" != "CF" ]; then
    #echo "STATUS=$STATUS"
    echo "Job is not in a Running(R), Pending(PD) or Creating(CF) status. Aborting"
    scancel $JOB
    exit 1
  fi

  echo -n "."
done

# Determine the first node in the job:
NODE=`srun --jobid=$JOB -N1 hostname`

# SSH to the node and attach the screen
sleep 1s
ssh -X -t $NODE $IS slurm$JOB
# The trap will now cancel the job before exiting.

